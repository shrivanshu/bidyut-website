{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gs783\\\\OneDrive\\\\Documents\\\\GitHub\\\\budyut-website\\\\front-end\\\\front-end\\\\src\\\\OfferingsCarousel.tsx\",\n  _s = $RefreshSig$();\nimport Image from \"next/image\";\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst offerings = [{\n  image: \"/placeholder.svg?height=150&width=250\",\n  // Adjusted placeholder size for smaller cards\n  title: \"Smart Progress Tracking\",\n  description: \"Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement. Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement.\"\n}, {\n  image: \"/placeholder.svg?height=150&width=250\",\n  title: \"Collaborative Learning Spaces\",\n  description: \"Connect with peers worldwide in virtual study rooms where you can share resources, discuss concepts, and solve problems together.\"\n}, {\n  image: \"/placeholder.svg?height=150&width=250\",\n  title: \"Smart Progress Tracking\",\n  description: \"Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement. Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement.\"\n}, {\n  image: \"/placeholder.svg?height=150&width=250\",\n  title: \"Personalized Learning Paths\",\n  description: \"Tailor your educational experience with adaptive learning paths that adjust to your pace and preferences, ensuring optimal engagement and retention.\"\n}, {\n  image: \"/placeholder.svg?height=150&width=250\",\n  title: \"Interactive Simulations\",\n  description: \"Engage with realistic simulations and virtual labs to apply theoretical knowledge in practical scenarios, enhancing understanding and skill development.\"\n}];\nexport default function OfferingsCarousel() {\n  _s();\n  const scrollRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const cardRefs = useRef([]);\n  const intervalRef = useRef(null);\n\n  // State for the currently centered card (logical index in original `offerings` array)\n  const [centeredOfferingIndex, setCenteredOfferingIndex] = useState(0);\n\n  // Duplicate cards three times for a smoother infinite scroll loop\n  const duplicatedOfferings = [...offerings, ...offerings, ...offerings];\n\n  // Function to apply scale, opacity, width, and rotation transforms based on card position\n  const applyCardTransforms = useCallback(() => {\n    const scrollElement = scrollRef.current;\n    if (!scrollElement) return;\n    const containerCenter = scrollElement.scrollLeft + scrollElement.clientWidth / 2;\n    const minCardWidth = 180; // px, narrower for side cards (reduced)\n    const maxCardWidth = 300; // px, wider for center card (reduced)\n    const maxRotation = 25; // degrees for Y-axis rotation (slightly increased for smaller cards)\n    const maxScaleReduction = 0.4; // Max scale reduction (e.g., 1 - 0.4 = 0.6 min scale)\n    const maxOpacityReduction = 0.7; // Max opacity reduction (e.g., 1 - 0.7 = 0.3 min opacity)\n\n    // Define a \"falloff\" distance where the effect is most pronounced\n    // Adjusted for smaller cards to still affect multiple cards\n    const falloffDistance = maxCardWidth * 2.0; // Adjusted to affect more cards relative to their size\n\n    cardRefs.current.forEach(cardElement => {\n      if (cardElement) {\n        const cardCenter = cardElement.offsetLeft + cardElement.clientWidth / 2;\n        const distance = Math.abs(containerCenter - cardCenter);\n\n        // Normalized distance, clamped to 1 to ensure effects don't go beyond max\n        const easedDistance = Math.pow(Math.min(1, distance / falloffDistance), 1.5); // Apply non-linear interpolation\n\n        const scale = 1 - easedDistance * maxScaleReduction;\n        const opacity = 1 - easedDistance * maxOpacityReduction;\n        const dynamicWidth = maxCardWidth - (maxCardWidth - minCardWidth) * easedDistance;\n        let transformOrigin = \"center center\";\n        let rotateYValue = 0;\n        if (cardCenter < containerCenter) {\n          // Card is to the left of center, rotate right (positive Y)\n          rotateYValue = maxRotation * easedDistance;\n          transformOrigin = \"right center\";\n        } else if (cardCenter > containerCenter) {\n          // Card is to the right of center, rotate left (negative Y)\n          rotateYValue = -maxRotation * easedDistance;\n          transformOrigin = \"left center\";\n        }\n        cardElement.style.transform = `scale(${scale}) rotateY(${rotateYValue}deg)`;\n        cardElement.style.transformOrigin = transformOrigin;\n        cardElement.style.opacity = `${opacity}`;\n        cardElement.style.width = `${dynamicWidth}px`;\n        cardElement.style.zIndex = `${Math.round(100 - easedDistance * 100)}`; // Bring center card to front\n        cardElement.style.backfaceVisibility = \"hidden\"; // Prevent backface from showing\n      }\n    });\n  }, []);\n\n  // Effect to handle auto-scrolling\n  useEffect(() => {\n    if (isHovered) {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      return;\n    }\n    if (intervalRef.current) clearInterval(intervalRef.current); // Clear previous interval\n\n    intervalRef.current = setInterval(() => {\n      setCenteredOfferingIndex(prevIndex => {\n        // Increment index for left-to-right movement, wrapping around\n        const nextIndex = (prevIndex + 1) % offerings.length;\n        return nextIndex;\n      });\n    }, 3000); // Scroll every 3 seconds\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [isHovered, offerings.length]);\n\n  // Effect to scroll to the centered card when `centeredOfferingIndex` changes\n  useEffect(() => {\n    var _cardRefs$current;\n    const scrollElement = scrollRef.current;\n    if (!scrollElement || cardRefs.current.length === 0) return;\n    let targetPhysicalIndex = offerings.length + centeredOfferingIndex; // Default target in the middle set\n\n    // Calculate the offset of the first card in the third set.\n    // This is our threshold for when to perform the instant jump back.\n    const firstCardOfThirdSetOffset = ((_cardRefs$current = cardRefs.current[offerings.length * 2]) === null || _cardRefs$current === void 0 ? void 0 : _cardRefs$current.offsetLeft) || 0;\n\n    // If we are logically at the first card (index 0) and physically past the jump threshold,\n    // instantly jump back to the equivalent position at the start of the *second* set.\n    if (centeredOfferingIndex === 0 && scrollElement.scrollLeft >= firstCardOfThirdSetOffset - scrollElement.clientWidth / 2) {\n      const jumpTargetIndex = offerings.length; // First card of the second set\n      const jumpTargetCard = cardRefs.current[jumpTargetIndex];\n      if (jumpTargetCard) {\n        const jumpScrollLeft = jumpTargetCard.offsetLeft - scrollElement.clientWidth / 2 + jumpTargetCard.clientWidth / 2;\n        scrollElement.scrollLeft = jumpScrollLeft; // Instant jump\n        // After the instant jump, the smooth scroll should target the same logical card (index 0),\n        // but now from its new physical position at the start of the second set.\n        targetPhysicalIndex = jumpTargetIndex;\n      }\n    }\n    const targetCardElement = cardRefs.current[targetPhysicalIndex];\n    if (targetCardElement) {\n      const targetScrollLeft = targetCardElement.offsetLeft - scrollElement.clientWidth / 2 + targetCardElement.clientWidth / 2;\n      scrollElement.scrollTo({\n        left: targetScrollLeft,\n        behavior: \"smooth\"\n      });\n    }\n  }, [centeredOfferingIndex, offerings.length]);\n\n  // Effect for continuous transform application (on scroll or initial load)\n  // This useEffect now only handles the requestAnimationFrame loop and event listener\n  useEffect(() => {\n    const scrollElement = scrollRef.current;\n    if (!scrollElement) return;\n    let animationFrameId;\n    const animateTransforms = () => {\n      applyCardTransforms();\n      animationFrameId = requestAnimationFrame(animateTransforms);\n    };\n\n    // Start continuous transform application\n    animationFrameId = requestAnimationFrame(animateTransforms);\n\n    // Also apply on actual scroll events (e.g., if user manually scrolls)\n    scrollElement.addEventListener(\"scroll\", applyCardTransforms);\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      scrollElement.removeEventListener(\"scroll\", applyCardTransforms);\n    };\n  }, [applyCardTransforms]);\n\n  // Effect for initial centering on mount\n  useEffect(() => {\n    const scrollElement = scrollRef.current;\n    if (!scrollElement || cardRefs.current.length === 0) return;\n    const initialTargetCard = cardRefs.current[offerings.length]; // First card of the second set\n    if (initialTargetCard) {\n      const initialScrollLeft = initialTargetCard.offsetLeft - scrollElement.clientWidth / 2 + initialTargetCard.clientWidth / 2;\n\n      // Use a setTimeout for initial scroll to ensure DOM is fully rendered and measured\n      const timeoutId = setTimeout(() => {\n        if (scrollRef.current) {\n          scrollRef.current.scrollLeft = initialScrollLeft;\n        }\n      }, 50); // Small delay to allow layout to settle\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [offerings.length]); // Run once on mount, or if offerings change\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"relative py-12 md:py-24 lg:py-32 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container px-4 md:px-6 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\",\n        children: [\"Our \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-emerald-500\",\n          children: \"Offerings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mx-auto max-w-[700px] text-gray-500 md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed dark:text-gray-400 mt-4\",\n        children: \"Discover how Bidyut is transforming education and industry through innovative robotics solutions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-x-0 top-1/2 -translate-y-1/2 h-[450px] bg-emerald-50 rounded-[150px] rotate-1 scale-x-110 opacity-70 z-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mt-12 flex justify-center items-center overflow-hidden w-full max-w-screen-xl mx-auto\",\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: scrollRef,\n        className: \"flex flex-nowrap py-8 px-4 md:px-0 gap-8 overflow-x-scroll\",\n        style: {\n          scrollbarWidth: \"none\",\n          msOverflowStyle: \"none\",\n          perspective: \"1000px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n            div::-webkit-scrollbar {\n              display: none;\n            }\n          `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), duplicatedOfferings.map((offering, index) => /*#__PURE__*/_jsxDEV(Card, {\n          //   ref={(el) => (cardRefs.current[index] = el)}\n          className: \"flex-none bg-white shadow-lg rounded-xl overflow-hidden transition-all duration-300 ease-out ring-4 ring-emerald-100\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            className: \"p-0\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: offering.image || \"/placeholder.svg\",\n              alt: offering.title,\n              width: 250,\n              height: 150,\n              className: \"w-full h-36 object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-bold mb-1\",\n                children: offering.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 text-xs\",\n                children: offering.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(OfferingsCarousel, \"BX4y7MA8L08H0vGyE2w7R6WQ+ZQ=\");\n_c = OfferingsCarousel;\nvar _c;\n$RefreshReg$(_c, \"OfferingsCarousel\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Image","useRef","useEffect","useState","useCallback","Card","CardContent","jsxDEV","_jsxDEV","offerings","image","title","description","OfferingsCarousel","scrollRef","isHovered","setIsHovered","cardRefs","intervalRef","centeredOfferingIndex","setCenteredOfferingIndex","duplicatedOfferings","applyCardTransforms","scrollElement","current","containerCenter","scrollLeft","clientWidth","minCardWidth","maxCardWidth","maxRotation","maxScaleReduction","maxOpacityReduction","falloffDistance","forEach","cardElement","cardCenter","offsetLeft","distance","Math","abs","easedDistance","pow","min","scale","opacity","dynamicWidth","transformOrigin","rotateYValue","style","transform","width","zIndex","round","backfaceVisibility","clearInterval","setInterval","prevIndex","nextIndex","length","_cardRefs$current","targetPhysicalIndex","firstCardOfThirdSetOffset","jumpTargetIndex","jumpTargetCard","jumpScrollLeft","targetCardElement","targetScrollLeft","scrollTo","left","behavior","animationFrameId","animateTransforms","requestAnimationFrame","addEventListener","cancelAnimationFrame","removeEventListener","initialTargetCard","initialScrollLeft","timeoutId","setTimeout","clearTimeout","className","children","fileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","ref","scrollbarWidth","msOverflowStyle","perspective","map","offering","index","src","alt","height","_c","$RefreshReg$"],"sources":["C:/Users/gs783/OneDrive/Documents/GitHub/budyut-website/front-end/front-end/src/OfferingsCarousel.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Image from \"next/image\"\r\nimport { useRef, useEffect, useState, useCallback } from \"react\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\n\r\ninterface Offering {\r\n  image: string\r\n  title: string\r\n  description: string\r\n}\r\n\r\nconst offerings: Offering[] = [\r\n  {\r\n    image: \"/placeholder.svg?height=150&width=250\", // Adjusted placeholder size for smaller cards\r\n    title: \"Smart Progress Tracking\",\r\n    description:\r\n      \"Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement. Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement.\",\r\n  },\r\n  {\r\n    image: \"/placeholder.svg?height=150&width=250\",\r\n    title: \"Collaborative Learning Spaces\",\r\n    description:\r\n      \"Connect with peers worldwide in virtual study rooms where you can share resources, discuss concepts, and solve problems together.\",\r\n  },\r\n  {\r\n    image: \"/placeholder.svg?height=150&width=250\",\r\n    title: \"Smart Progress Tracking\",\r\n    description:\r\n      \"Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement. Monitor your learning journey with detailed analytics and insights that help you identify strengths and areas for improvement.\",\r\n  },\r\n  {\r\n    image: \"/placeholder.svg?height=150&width=250\",\r\n    title: \"Personalized Learning Paths\",\r\n    description:\r\n      \"Tailor your educational experience with adaptive learning paths that adjust to your pace and preferences, ensuring optimal engagement and retention.\",\r\n  },\r\n  {\r\n    image: \"/placeholder.svg?height=150&width=250\",\r\n    title: \"Interactive Simulations\",\r\n    description:\r\n      \"Engage with realistic simulations and virtual labs to apply theoretical knowledge in practical scenarios, enhancing understanding and skill development.\",\r\n  },\r\n]\r\n\r\nexport default function OfferingsCarousel() {\r\n  const scrollRef = useRef<HTMLDivElement>(null)\r\n  const [isHovered, setIsHovered] = useState(false)\r\n  const cardRefs = useRef<Array<HTMLDivElement | null>>([])\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null)\r\n\r\n  // State for the currently centered card (logical index in original `offerings` array)\r\n  const [centeredOfferingIndex, setCenteredOfferingIndex] = useState(0)\r\n\r\n  // Duplicate cards three times for a smoother infinite scroll loop\r\n  const duplicatedOfferings = [...offerings, ...offerings, ...offerings]\r\n\r\n  // Function to apply scale, opacity, width, and rotation transforms based on card position\r\n  const applyCardTransforms = useCallback(() => {\r\n    const scrollElement = scrollRef.current\r\n    if (!scrollElement) return\r\n\r\n    const containerCenter = scrollElement.scrollLeft + scrollElement.clientWidth / 2\r\n\r\n    const minCardWidth = 180 // px, narrower for side cards (reduced)\r\n    const maxCardWidth = 300 // px, wider for center card (reduced)\r\n    const maxRotation = 25 // degrees for Y-axis rotation (slightly increased for smaller cards)\r\n    const maxScaleReduction = 0.4 // Max scale reduction (e.g., 1 - 0.4 = 0.6 min scale)\r\n    const maxOpacityReduction = 0.7 // Max opacity reduction (e.g., 1 - 0.7 = 0.3 min opacity)\r\n\r\n    // Define a \"falloff\" distance where the effect is most pronounced\r\n    // Adjusted for smaller cards to still affect multiple cards\r\n    const falloffDistance = maxCardWidth * 2.0 // Adjusted to affect more cards relative to their size\r\n\r\n    cardRefs.current.forEach((cardElement) => {\r\n      if (cardElement) {\r\n        const cardCenter = cardElement.offsetLeft + cardElement.clientWidth / 2\r\n        const distance = Math.abs(containerCenter - cardCenter)\r\n\r\n        // Normalized distance, clamped to 1 to ensure effects don't go beyond max\r\n        const easedDistance = Math.pow(Math.min(1, distance / falloffDistance), 1.5) // Apply non-linear interpolation\r\n\r\n        const scale = 1 - easedDistance * maxScaleReduction\r\n        const opacity = 1 - easedDistance * maxOpacityReduction\r\n        const dynamicWidth = maxCardWidth - (maxCardWidth - minCardWidth) * easedDistance\r\n\r\n        let transformOrigin = \"center center\"\r\n        let rotateYValue = 0\r\n\r\n        if (cardCenter < containerCenter) {\r\n          // Card is to the left of center, rotate right (positive Y)\r\n          rotateYValue = maxRotation * easedDistance\r\n          transformOrigin = \"right center\"\r\n        } else if (cardCenter > containerCenter) {\r\n          // Card is to the right of center, rotate left (negative Y)\r\n          rotateYValue = -maxRotation * easedDistance\r\n          transformOrigin = \"left center\"\r\n        }\r\n\r\n        cardElement.style.transform = `scale(${scale}) rotateY(${rotateYValue}deg)`\r\n        cardElement.style.transformOrigin = transformOrigin\r\n        cardElement.style.opacity = `${opacity}`\r\n        cardElement.style.width = `${dynamicWidth}px`\r\n        cardElement.style.zIndex = `${Math.round(100 - easedDistance * 100)}` // Bring center card to front\r\n        cardElement.style.backfaceVisibility = \"hidden\" // Prevent backface from showing\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  // Effect to handle auto-scrolling\r\n  useEffect(() => {\r\n    if (isHovered) {\r\n      if (intervalRef.current) clearInterval(intervalRef.current)\r\n      return\r\n    }\r\n\r\n    if (intervalRef.current) clearInterval(intervalRef.current) // Clear previous interval\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      setCenteredOfferingIndex((prevIndex) => {\r\n        // Increment index for left-to-right movement, wrapping around\r\n        const nextIndex = (prevIndex + 1) % offerings.length\r\n        return nextIndex\r\n      })\r\n    }, 3000) // Scroll every 3 seconds\r\n\r\n    return () => {\r\n      if (intervalRef.current) clearInterval(intervalRef.current)\r\n    }\r\n  }, [isHovered, offerings.length])\r\n\r\n  // Effect to scroll to the centered card when `centeredOfferingIndex` changes\r\n  useEffect(() => {\r\n    const scrollElement = scrollRef.current\r\n    if (!scrollElement || cardRefs.current.length === 0) return\r\n\r\n    let targetPhysicalIndex = offerings.length + centeredOfferingIndex // Default target in the middle set\r\n\r\n    // Calculate the offset of the first card in the third set.\r\n    // This is our threshold for when to perform the instant jump back.\r\n    const firstCardOfThirdSetOffset = cardRefs.current[offerings.length * 2]?.offsetLeft || 0\r\n\r\n    // If we are logically at the first card (index 0) and physically past the jump threshold,\r\n    // instantly jump back to the equivalent position at the start of the *second* set.\r\n    if (\r\n      centeredOfferingIndex === 0 &&\r\n      scrollElement.scrollLeft >= firstCardOfThirdSetOffset - scrollElement.clientWidth / 2\r\n    ) {\r\n      const jumpTargetIndex = offerings.length // First card of the second set\r\n      const jumpTargetCard = cardRefs.current[jumpTargetIndex]\r\n      if (jumpTargetCard) {\r\n        const jumpScrollLeft =\r\n          jumpTargetCard.offsetLeft - scrollElement.clientWidth / 2 + jumpTargetCard.clientWidth / 2\r\n        scrollElement.scrollLeft = jumpScrollLeft // Instant jump\r\n        // After the instant jump, the smooth scroll should target the same logical card (index 0),\r\n        // but now from its new physical position at the start of the second set.\r\n        targetPhysicalIndex = jumpTargetIndex\r\n      }\r\n    }\r\n\r\n    const targetCardElement = cardRefs.current[targetPhysicalIndex]\r\n    if (targetCardElement) {\r\n      const targetScrollLeft =\r\n        targetCardElement.offsetLeft - scrollElement.clientWidth / 2 + targetCardElement.clientWidth / 2\r\n      scrollElement.scrollTo({ left: targetScrollLeft, behavior: \"smooth\" })\r\n    }\r\n  }, [centeredOfferingIndex, offerings.length])\r\n\r\n  // Effect for continuous transform application (on scroll or initial load)\r\n  // This useEffect now only handles the requestAnimationFrame loop and event listener\r\n  useEffect(() => {\r\n    const scrollElement = scrollRef.current\r\n    if (!scrollElement) return\r\n\r\n    let animationFrameId: number\r\n    const animateTransforms = () => {\r\n      applyCardTransforms()\r\n      animationFrameId = requestAnimationFrame(animateTransforms)\r\n    }\r\n\r\n    // Start continuous transform application\r\n    animationFrameId = requestAnimationFrame(animateTransforms)\r\n\r\n    // Also apply on actual scroll events (e.g., if user manually scrolls)\r\n    scrollElement.addEventListener(\"scroll\", applyCardTransforms)\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId)\r\n      scrollElement.removeEventListener(\"scroll\", applyCardTransforms)\r\n    }\r\n  }, [applyCardTransforms])\r\n\r\n  // Effect for initial centering on mount\r\n  useEffect(() => {\r\n    const scrollElement = scrollRef.current\r\n    if (!scrollElement || cardRefs.current.length === 0) return\r\n\r\n    const initialTargetCard = cardRefs.current[offerings.length] // First card of the second set\r\n    if (initialTargetCard) {\r\n      const initialScrollLeft =\r\n        initialTargetCard.offsetLeft - scrollElement.clientWidth / 2 + initialTargetCard.clientWidth / 2\r\n\r\n      // Use a setTimeout for initial scroll to ensure DOM is fully rendered and measured\r\n      const timeoutId = setTimeout(() => {\r\n        if (scrollRef.current) {\r\n          scrollRef.current.scrollLeft = initialScrollLeft\r\n        }\r\n      }, 50) // Small delay to allow layout to settle\r\n\r\n      return () => clearTimeout(timeoutId)\r\n    }\r\n  }, [offerings.length]) // Run once on mount, or if offerings change\r\n\r\n  return (\r\n    <section className=\"relative py-12 md:py-24 lg:py-32 overflow-hidden\">\r\n      <div className=\"container px-4 md:px-6 text-center\">\r\n        <h2 className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\">\r\n          Our <span className=\"text-emerald-500\">Offerings</span>\r\n        </h2>\r\n        <p className=\"mx-auto max-w-[700px] text-gray-500 md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed dark:text-gray-400 mt-4\">\r\n          Discover how Bidyut is transforming education and industry through innovative robotics solutions\r\n        </p>\r\n      </div>\r\n\r\n      {/* Background element for the curved effect */}\r\n      <div className=\"absolute inset-x-0 top-1/2 -translate-y-1/2 h-[450px] bg-emerald-50 rounded-[150px] rotate-1 scale-x-110 opacity-70 z-0\" />\r\n\r\n      <div\r\n        className=\"relative mt-12 flex justify-center items-center overflow-hidden w-full max-w-screen-xl mx-auto\"\r\n        onMouseEnter={() => setIsHovered(true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        <div\r\n          ref={scrollRef}\r\n          className=\"flex flex-nowrap py-8 px-4 md:px-0 gap-8 overflow-x-scroll\"\r\n          style={{ scrollbarWidth: \"none\", msOverflowStyle: \"none\", perspective: \"1000px\" }}\r\n        >\r\n          {/* Hide scrollbar for Webkit browsers */}\r\n          <style>{`\r\n            div::-webkit-scrollbar {\r\n              display: none;\r\n            }\r\n          `}</style>\r\n          {duplicatedOfferings.map((offering, index) => (\r\n            <Card\r\n              key={index}\r\n            //   ref={(el) => (cardRefs.current[index] = el)}\r\n              className=\"flex-none bg-white shadow-lg rounded-xl overflow-hidden transition-all duration-300 ease-out ring-4 ring-emerald-100\"\r\n            >\r\n              <CardContent className=\"p-0\">\r\n                <Image\r\n                  src={offering.image || \"/placeholder.svg\"}\r\n                  alt={offering.title}\r\n                  width={250}\r\n                  height={150}\r\n                  className=\"w-full h-36 object-cover\"\r\n                />\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"text-lg font-bold mb-1\">{offering.title}</h3>\r\n                  <p className=\"text-gray-600 text-xs\">{offering.description}</p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}